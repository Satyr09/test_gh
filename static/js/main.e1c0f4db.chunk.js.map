{"version":3,"sources":["weather.svg","thank.svg","topContributors.svg","appStyle.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","styles","progressBar","height","borderRadius","progressBarInner","backgroundColor","donateInput","padding","color","marginBottom","fontWeight","donateButton","fontSize","letterSpacing","fontFamily","&:hover","secondButton","@media screen and (min-width: 283px)","marginLeft","@media screen and (max-width: 282px)","marginTop","paper","position","width","maxWidth","-webkit-box-shadow","boxShadow","outline","top","left","transform","waitModal","textAlign","CircularProgress","margin","table","@media (max-width: 800px)","flex","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initClient","window","gapi","client","init","apiKey","process","discoveryDocs","clientId","scope","then","load","onLoad","data","error","info","totalSum","Number","countryCount","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","value","amount","country","err","return","percentage","setState","count","length","topCountries","callback","sheets","spreadsheets","values","get","spreadsheetId","range","response","result","map","res","time","handleChange","e","target","handleSubmit","state","isNaN","alert","auth2","getAuthInstance","isSignedIn","update","signIn","body","processing","fetch","json","ip","concat","Accept","push","Date","now","toLocaleString","a","append","valueInputOption","resource","hasContributed","scroll","scrollTo","donateRef","current","offsetTop","completed","React","createRef","_this2","classes","react_default","createElement","className","Tooltip","TransitionComponent","Zoom","title","LinearProgress","variant","root","barColorPrimary","Button","component","size","onClick","src","require","alt","Table","TableHead","TableRow","style","TableCell","align","TableBody","keys","row","idx","key","ref","TextField","id","label","disabled","required","defaultValue","onChange","InputProps","startAdornment","InputAdornment","Modal","aria-labelledby","aria-describedby","open","Typography","Component","withStyles","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1c0f4db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/weather.78c30879.svg\";","module.exports = __webpack_public_path__ + \"static/media/thank.8f62010a.svg\";","module.exports = __webpack_public_path__ + \"static/media/topContributors.aebbf662.svg\";","const styles = {\n  progressBar: {\n    height: \"15px\",\n    borderRadius: \"4px\"\n  },\n  progressBarInner: {\n    backgroundColor: \"#e5346f\"\n  },\n  donateInput: {\n    backgroundColor: \"rgba(229,52,111,0.5)\",\n    padding: \"5px 5px 5px 5px\",\n    color: \"black\",\n    marginBottom: \"5%\",\n    fontWeight: \"400\"\n  },\n  donateButton: {\n    backgroundColor: \"#e5346f\",\n    fontWeight: \"800\",\n    height: \"80px\",\n    color: \"#131212\",\n    fontSize: \"38px\",\n    letterSpacing: \"10px\",\n    fontFamily: '\"Viga\", sans-serif',\n    \"&:hover\": {\n      backgroundColor: \"#131212\",\n      color: \"#e5346f\"\n    }\n  },\n  secondButton: {\n    backgroundColor: \"#e5346f\",\n    fontWeight: \"800\",\n    color: \"#131212\",\n    \"@media screen and (min-width: 283px)\": {\n      marginLeft: \"30px\"\n    },\n    \"@media screen and (max-width: 282px)\": {\n      marginTop: \"10px\",\n      marginLeft: \"0\"\n    }\n  },\n  paper: {\n    position: \"absolute\",\n    width: \"50vw\",\n    maxWidth: \"300px\",\n    backgroundColor: \"white\",\n    padding: \"5% 5% 5% 5%\",\n    \"-webkit-box-shadow\": \"3px 4px 7px 2px #000000\",\n    boxShadow: \" 3px 4px 7px 2px #000000\",\n    outline: \"none\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  },\n  waitModal: {\n    position: \"absolute\",\n    width: \"50vw\",\n    maxWidth: \"300px\",\n    backgroundColor: \"white\",\n    padding: \"5% 5% 5% 5%\",\n    \"-webkit-box-shadow\": \"3px 4px 7px 2px #000000\",\n    boxShadow: \" 3px 4px 7px 2px #000000\",\n    outline: \"none\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    textAlign: \"center\"\n  },\n  CircularProgress: {\n    margin: \"0 auto\",\n    marginTop: \"10px\"\n  },\n  table: {\n    maxWidth: \"400px\",\n    \"@media (max-width: 800px)\": {\n      textAlign: \"left\",\n      flex: \"0 0 100%\"\n    }\n  }\n};\n\nexport default styles;\n","import React from \"react\";\nimport \"./App.css\";\nimport styles from \"./appStyle.js\";\n\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  TextField,\n  CircularProgress,\n  Modal,\n  Typography,\n  Zoom,\n  InputAdornment,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Tooltip\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      completed: \"80\"\n    };\n    this.donateRef = React.createRef();\n  }\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", this.initClient);\n  }\n\n  initClient = () => {\n    window.gapi.client\n      .init({\n        apiKey: process.env.REACT_APP_apiKey,\n        discoveryDocs: [\n          \"https://sheets.googleapis.com/$discovery/rest?version=v4\"\n        ],\n        clientId: process.env.REACT_APP_clientId,\n        scope: process.env.REACT_APP_scopes\n      })\n      .then(() => {\n        this.load(this.onLoad);\n      });\n  };\n\n  onLoad = (data, error) => {\n    if (data) {\n      const info = data.info;\n      let totalSum = Number(0);\n      let countryCount = {};\n      for (let item of info) {\n        totalSum += Number(item.amount);\n        countryCount[item.country] = (countryCount[item.country] || 0) + 1;\n      }\n      let percentage = totalSum / 10;\n      this.setState({\n        count: info.length,\n        info: info,\n        totalSum: totalSum,\n        percentage,\n        topCountries: countryCount\n      });\n    } else {\n      this.setState({ error });\n    }\n  };\n\n  load = callback => {\n    window.gapi.client.load(\"sheets\", \"v4\", () => {\n      window.gapi.client.sheets.spreadsheets.values\n        .get({\n          spreadsheetId: process.env.REACT_APP_spreadsheetId,\n          range: \"Sheet1!A1:T\"\n        })\n        .then(\n          response => {\n            const data = response.result.values;\n            const info =\n              data.map(res => ({\n                amount: res[0],\n                country: res[1],\n                time: res[2]\n              })) || [];\n            callback({\n              info\n            });\n          },\n          response => {\n            callback(false, response.result.error);\n          }\n        );\n    });\n  };\n\n  handleChange = e => {\n    let amount = e.target.value;\n    this.setState({\n      amount\n    });\n  };\n\n  handleSubmit = e => {\n    if (this.state.percentage >= 100) return;\n    if (isNaN(this.state.amount)) {\n      alert(\"Not a valid input\", this.state.amount);\n    } else {\n      if (!window.gapi.auth2.getAuthInstance().isSignedIn.get())\n        window.gapi.auth2\n          .getAuthInstance()\n          .signIn()\n          .then(e => this.update());\n      else {\n        this.update();\n      }\n    }\n  };\n\n  update = () => {\n    let body;\n    this.setState({\n      processing: true\n    });\n    fetch(\"https://api.ipify.org?format=json\")\n      .then(res => res.json())\n      .then(ip => {\n        return fetch(`http://ip-api.com/json/${ip.ip}`, {\n          Accept: \"application/json\"\n        });\n      })\n      .then(res => res.json())\n      .then(data => {\n        let item = [];\n        let values = [];\n        item.push(this.state.amount, data.country, Date.now().toLocaleString());\n        values.push(item);\n        body = {\n          values: values\n        };\n      })\n      .then(a => {\n        window.gapi.client.sheets.spreadsheets.values\n          .append({\n            spreadsheetId: process.env.REACT_APP_spreadsheetId,\n            range: \"Sheet1!A1:T\",\n            valueInputOption: \"USER_ENTERED\",\n            resource: body\n          })\n          .then(response => {\n            this.setState(\n              {\n                processing: false,\n                hasContributed: true\n              },\n              e => {\n                this.load(this.onLoad);\n              }\n            );\n          });\n      });\n  };\n\n  scroll = () => {\n    window.scrollTo(0, this.donateRef.current.offsetTop);\n  };\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className=\"App\">\n        <div className=\"landingBackground\">\n          <div className=\"landingBackgroundProgress\">\n            <Tooltip\n              TransitionComponent={Zoom}\n              title={`${Number(this.state.percentage | 0) *\n                10}$ raised of 1000$ goal`}\n            >\n              <LinearProgress\n                variant=\"determinate\"\n                value={\n                  this.state.percentage\n                    ? this.state.percentage >= 100 ? 100 : this.state.percentage\n                    : 0\n                }\n                classes={{\n                  root: classes.progressBar,\n                  barColorPrimary: classes.progressBarInner\n                }}\n              />\n            </Tooltip>\n          </div>\n          <div className=\"landingBackgroundMid\">\n            <div className=\"landingBackgroundContentHolder\">\n              <div className=\"landingBackgroundText\" styles=\"text-align:left\">\n                Donate to solve the issue of <br />\n                <span className=\"specialText\">Water crisis</span> in India\n                <br />\n                <span className=\"specialSmallText\">\n                  Millions of Indians would have no access to drinking water by\n                  2020.Donate a small amount to help solve this issue\n                </span>\n              </div>\n              <div className=\"landingBackgroundAction\">\n                <Button variant=\"contained\" component=\"span\" size=\"large\">\n                  Know More\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  component=\"span\"\n                  size=\"large\"\n                  className={classes.secondButton}\n                  onClick={this.scroll}\n                >\n                  Donate\n                </Button>\n              </div>\n            </div>\n\n            <div className=\"landingBackgroundImage\">\n              <img src={require(\"./weather.svg\")} alt=\"water\" />\n            </div>\n          </div>\n        </div>\n        {this.state.percentage >= 100 ? (\n          <div className=\"successWrapper\">\n            <p>\n              We have reached our goal!<br />We will no longer be accepting\n              donations.<br />\n            </p>\n          </div>\n        ) : (\n          <span />\n        )}\n\n        <div className=\"imploreArea\">\n          {!this.state.hasContributed ? (\n            this.state.count ? (\n              <div className=\"imploreTextWrapper\">\n                Join{\" \"}\n                <span className=\"specialTextCount\">{this.state.count} </span>\n                other donors who have already supported this project<br />\n                Every dollar helps!\n              </div>\n            ) : (\n              \"\"\n            )\n          ) : (\n            <div className=\"thankContribution\">\n              <img src={require(\"./thank.svg\")} alt=\"love\" />\n              <div className=\"thankContributionText\">\n                Thank you!<br />\n                Your contribution will go a long way!\n              </div>\n            </div>\n          )}\n\n          {this.state.topCountries ? (\n            <Table className={classes.table}>\n              <TableHead>\n                <TableRow>\n                  <p>\n                    <img\n                      src={require(\"./topContributors.svg\")}\n                      style={{ width: \"70px\" }}\n                      alt=\"top\"\n                    />\n                    Top Contributors{\" \"}\n                  </p>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Country</TableCell>\n                  <TableCell align=\"right\">Donors</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {Object.keys(this.state.topCountries).map((row, idx) => (\n                  <TableRow key={idx}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {this.state.topCountries[row]}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          ) : (\n            <span />\n          )}\n        </div>\n\n        <div className=\"donateArea\" ref={this.donateRef}>\n          <div className=\"donateAmountWrapper\">\n            <TextField\n              id=\"filled-adornment-amount\"\n              variant=\"filled\"\n              label=\"Amount\"\n              disabled={this.state.percentage >= 100}\n              required={true}\n              className={classes.donateInput}\n              value={this.state.amount}\n              defaultValue=\"0\"\n              onChange={this.handleChange}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">$</InputAdornment>\n                )\n              }}\n            />\n          </div>\n\n          <div className=\"donateButtonWrapper\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.donateButton}\n              onClick={this.handleSubmit}\n            >\n              Donate\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"authorArea\">Made by Daipayan Mukherjee</div>\n\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.processing || false}\n        >\n          <div className={classes.waitModal}>\n            <Typography variant=\"h6\" id=\"modal-title\">\n              Please wait while your donation is being processed\n            </Typography>\n            <CircularProgress\n              className={classes.CircularProgress}\n              color=\"secondary\"\n            />\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}